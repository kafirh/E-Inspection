@model MachineInspection.Application.DTO.InspectionItemCreateViewDto

@{
    ViewData["Title"] = "New Inspection Item";
}

<div class="container d-flex justify-content-center align-items-center" style="min-height: 90vh;">
    <div class="border rounded-4 p-5 shadow" style="width: 100%; max-width: 800px;">
        <h3 class="mb-4 fw-bold text-center">New Inspection Item</h3>

        <form asp-controller="Inspection" asp-action="Create" method="post" enctype="multipart/form-data">
            <input type="hidden" name="machineId" value="@Model.MachineId" />
            <input type="hidden" name="inspectionId" value="@Model.InspectionId" />
            <div class="row g-3">

                @if (Model.Mode != "ImageOnly")
                {
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Item Name:</label>
                        <input asp-for="Item.itemName" class="form-control" />
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Specification:</label>
                        <input asp-for="Item.specification" class="form-control" />
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Method:</label>
                        <input asp-for="Item.method" class="form-control" />
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Frequency:</label>
                        <input asp-for="Item.frequency" class="form-control" />
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Number:</label>
                        <input asp-for="Item.number" type="number" class="form-control" />
                    </div>

                    <div class="col-md-6 d-flex align-items-center">
                        <label class="form-label fw-semibold me-2">Is Number:</label>
                        <div class="form-check form-switch">
                            <input asp-for="Item.isNumber" class="form-check-input" type="checkbox" />
                        </div>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Prasyarat:</label>
                        <input asp-for="Item.prasyarat" class="form-control" />
                    </div>
                }

                @if (Model.Mode != "NoImage")
                {
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Upload Image:</label>
                        <input asp-for="ImageFile" type="file" class="form-control" id="imageInput"
                               accept="image/jpeg, image/jpg, image/png" />
                    </div>
                }

                <div class="col-12 text-center mt-4">
                    <button type="submit" class="btn btn-success px-5 py-2 rounded-pill fw-bold">
                        SIMPAN
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('imageInput').addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (!file) return;

            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                alert("Hanya file JPG, JPEG, dan PNG yang diperbolehkan.");
                event.target.value = ''; // Clear file
                return;
            }

            const reader = new FileReader();
            reader.readAsDataURL(file);

            reader.onload = function (e) {
                const img = new Image();
                img.src = e.target.result;

                img.onload = function () {
                    const canvas = document.createElement('canvas');
                    const ctx = canvas.getContext('2d');

                    const MAX_WIDTH = 800;
                    const scale = MAX_WIDTH / img.width;

                    canvas.width = MAX_WIDTH;
                    canvas.height = img.height * scale;

                    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

                    // Convert to JPG always, with compression
                    canvas.toBlob(function (blob) {
                        const compressedFile = new File(
                            [blob],
                            file.name.replace(/\.[^/.]+$/, "") + ".jpg", // rename to .jpg
                            {
                                type: 'image/jpeg',
                                lastModified: Date.now()
                            }
                        );

                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(compressedFile);
                        event.target.files = dataTransfer.files;

                        console.log("Image compressed and converted to JPG.");
                    }, 'image/jpeg', 0.7);
                };
            };
        });
    </script>

    @await Html.PartialAsync("_ValidationScriptsPartial")
}


